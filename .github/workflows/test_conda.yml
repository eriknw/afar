name: Test conda

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.8", "3.9", "3.10"]  # , "3.7.10 1_73_pypy"]
        # exclude:
        #   - os: "windows-latest"
        #     python-version: "3.7.10 1_73_pypy"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          channels: conda-forge
          activate-environment: afar
      - name: Install dependencies
        run: |
          conda install -y -c conda-forge distributed pytest innerscope
          pip install -e .
      - name: PyTest
        run: |
          which python  # sanity check
          python -c 'from distributed.utils import is_kernel'
          python -c 'from dask import distributed'
          pytest
      - name: Notebook test
        run: |
          conda install -y -c conda-forge nbconvert jupyter
          jupyter nbconvert --to notebook --execute afar/tests/*ipynb
